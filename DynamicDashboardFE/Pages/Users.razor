@page "/users"
@inject HttpClient Http
@using DynamicDashboardCommon.Models <!-- Add this to reference the namespace -->
@using DynamicDashboardFE.Components
<ExceptionHandler ErrorMessage="@errorMessage" />

<!--
	This page displays a list of users fetched from a WebAPI.
	It shows user details such as User ID, Username, Role, and Created At date.
	If there is an error during the fetch, it displays an error message.
-->

<h3>Users List</h3>

@if (users == null)
{
	<p>Loading...</p>
}
else if (users.Count == 0)
{
	<p>No users found.</p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>User ID</th>
				<th>Username</th>
				<th>Role</th>
				<th>Created At</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var user in users)
			{
				<tr>
					<td>@user.UserID</td>
					<td>@user.Username</td>
					<td>@user.RoleID</td>
					<td>@user.CreatedAt.ToShortDateString()</td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
	private List<User> users; // Define the users variable
	private string errorMessage;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			// Fetch users from the WebAPI
			var response = await Http.GetAsync("api/users");

			if (response.IsSuccessStatusCode)
			{
				users = await response.Content.ReadFromJsonAsync<List<User>>();
			}
			else
			{
				errorMessage = "Failed to fetch users. Please try again later.";
			}
		}
		catch (Exception ex)
		{
			errorMessage = $"An error occurred: {ex.InnerException + " " + ex.StackTrace}";
		}
	}
}